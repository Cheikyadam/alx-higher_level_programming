#doctest for say my name

First let's import the module:

	>>> say_my_name = __import__('3-say_my_name').say_my_name

The test now:

	>>> say_my_name("John", "Smith")
	My name is John Smith
	>>> say_my_name("Bob")
	My name is Bob 
	>>> say_my_name(12, "Bob")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string
	>>> say_my_name(12, 7)
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
	>>> say_my_name("Bob", 2)
        Traceback (most recent call last):
                ...
        TypeError: last_name must be a string
	>>> say_my_name(12.6, "Bob")
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
	>>> say_my_name("Bob", 2.7)
        Traceback (most recent call last):
                ...
        TypeError: last_name must be a string
	>>> say_my_name(12.9, 7)
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
	>>> say_my_name(["Bob", 12], 7)
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
	>>> say_my_name("Bob", ["Bob", "Amina"]) 
        Traceback (most recent call last):
                ...
        TypeError: last_name must be a string
	>>> say_my_name(None, None)
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
	>>> say_my_name("Bob", None)
        Traceback (most recent call last):
                ...
        TypeError: last_name must be a string
	>>> say_my_name(None, "Bob")
        Traceback (most recent call last):
                ...
        TypeError: first_name must be a string
